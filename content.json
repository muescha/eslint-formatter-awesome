[{"filePath":"/Users/Prashant/Documents/Projects/eslint-stats/src/index.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'flags' is assigned a value but never used.","line":1,"column":18,"nodeType":"Identifier","endLine":1,"endColumn":23},{"ruleId":"no-unused-vars","severity":2,"message":"'emoji' is assigned a value but never used.","line":7,"column":7,"nodeType":"Identifier","endLine":7,"endColumn":12},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":8,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":8,"endColumn":24},{"ruleId":"no-unused-vars","severity":2,"message":"'errorMessages' is assigned a value but never used.","line":49,"column":11,"nodeType":"Identifier","endLine":49,"endColumn":24},{"ruleId":"no-unused-vars","severity":2,"message":"'warningMessages' is assigned a value but never used.","line":63,"column":11,"nodeType":"Identifier","endLine":63,"endColumn":26},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":98,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":98,"endColumn":18},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":102,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":102,"endColumn":18},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":107,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":107,"endColumn":16},{"ruleId":"no-unused-vars","severity":2,"message":"'stdout' is assigned a value but never used.","line":110,"column":15,"nodeType":"Identifier","endLine":110,"endColumn":21},{"ruleId":"no-unused-vars","severity":2,"message":"'stderr' is assigned a value but never used.","line":110,"column":23,"nodeType":"Identifier","endLine":110,"endColumn":29},{"ruleId":"no-unused-vars","severity":2,"message":"'flags' is assigned a value but never used.","line":116,"column":13,"nodeType":"Identifier","endLine":116,"endColumn":18},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":117,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":117,"endColumn":16}],"errorCount":12,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const { Command, flags } = require('@oclif/command');\n//const { spawn } = require('child_process');\nconst util = require('util');\nconst exec = util.promisify(require('child_process').exec);\n\nconst chalk = require('chalk');\nconst emoji = require('node-emoji');\nconst log = console.log;\nconst fs = require('fs');\n// Combine styled and normal strings\nclass EslintStatsCommand extends Command {\n  groupByRules(data) {\n    const list = {};\n    JSON.parse(data).forEach(each => {\n      each.messages.forEach(msg => {\n        if (!list[msg.ruleId]) {\n          list[msg.ruleId] = [];\n        }\n        list[msg.ruleId].push({ file: each.filePath, ...msg });\n      });\n    });\n    return list;\n  }\n  getTotalCount(data) {\n    const result = {\n      errors: 0,\n      warnings: 0,\n      autoFixableErrors: 0,\n      autoFixableWarnings: 0\n    };\n    JSON.parse(data).forEach(each => {\n      if (each.errorCount) {\n        result.errors = result.errors + each.errorCount;\n      } else if (each.warningCount) {\n        result.warnings = result.warnings + each.warningCount;\n      }\n      if (each.fixableErrorCount) {\n        result.autoFixableErrors =\n          result.autoFixableErrors + each.fixableErrorCount;\n      } else if (each.fixableWarningCount) {\n        result.autoFixableWarnings =\n          result.autoFixableWarnings + each.fixableWarningCount;\n      }\n    });\n    return result;\n  }\n\n  displayErrorMessages(data) {\n    const errorMessages = [];\n    log('');\n    log(chalk.red.bold(`Error List`));\n    JSON.parse(data).forEach(each => {\n      if (each.errorCount) {\n        log(chalk.white.bold(each.filePath));\n        each.messages.forEach(msg => {\n          log(`${msg.line}:${msg.column} ${msg.ruleId} ${msg.message}`);\n        });\n        log('');\n      }\n    });\n  }\n  displayWarningMessages(data) {\n    const warningMessages = [];\n    log('');\n    log(chalk.yellow.bold(`Warning List`));\n    JSON.parse(data).forEach(each => {\n      if (each.warningCount) {\n        log(chalk.white.bold(each.filePath));\n        each.messages.forEach(msg => {\n          log(`${msg.line}:${msg.column} ${msg.message} - ${msg.ruleId}`);\n        });\n      }\n    });\n  }\n  displayByType(data) {\n    this.displayErrorMessages(data);\n    this.displayWarningMessages(data);\n  }\n  displayByRules(data) {\n    const rules = this.groupByRules(data);\n    log(chalk.white.bold('****** Grouped by Rules ******'));\n    log('\\n');\n    Object.entries(rules).forEach(rule => {\n      log(chalk.white.red(rule[0]));\n      rule[1].forEach(issue => {\n        log(\n          `--> ${issue.line}:${issue.column} ${chalk.white.bold(\n            issue.message\n          )} in ${issue.file}`\n        );\n      });\n      log('');\n    });\n  }\n\n  writeToFile(data) {\n    fs.truncate('content.json', () => {\n      console.log('Content truncated...');\n    });\n\n    fs.writeFile('content.json', data, 'utf8', () =>\n      console.log('file created')\n    );\n  }\n\n  async fetchError() {\n    console.log('fetching ...');\n\n    try {\n      const { stdout, stderr } = await exec('eslint . -f json');\n    } catch (e) {\n      this.writeToFile(e.stdout);\n    }\n  }\n  async run() {\n    const { flags } = this.parse(EslintStatsCommand);\n    console.log('Running eslint ...');\n    this.fetchError();\n  }\n}\n\nEslintStatsCommand.description = `Describe the command here\n...\nExtra documentation goes here\n`;\n\nEslintStatsCommand.flags = {\n  //   // add --version flag to show CLI version\n  //   version: flags.version({ char: 'v' }),\n  //   // add --help flag to show CLI version\n  //   help: flags.help({ char: 'h' }),\n  //   rule: flags.string({ char: 'r', description: 'Group by Rules' })\n};\n\nmodule.exports = EslintStatsCommand;\n"},{"filePath":"/Users/Prashant/Documents/Projects/eslint-stats/test/index.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":4,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":9}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const {expect, test} = require('@oclif/test')\nconst cmd = require('..')\n\ndescribe('eslint-stats', () => {\n  test\n  .stdout()\n  .do(() => cmd.run([]))\n  .it('runs hello', ctx => {\n    expect(ctx.stdout).to.contain('hello world')\n  })\n\n  test\n  .stdout()\n  .do(() => cmd.run(['--name', 'jeff']))\n  .it('runs hello --name jeff', ctx => {\n    expect(ctx.stdout).to.contain('hello jeff')\n  })\n})\n"},{"filePath":"/Users/Prashant/Documents/Projects/eslint-stats/ui/src/components/app.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'h' is defined but never used.","line":1,"column":10,"nodeType":"Identifier","endLine":1,"endColumn":11},{"ruleId":"react/react-in-jsx-scope","severity":2,"message":"'React' must be in scope when using JSX","line":20,"column":7,"nodeType":"JSXOpeningElement","endLine":20,"endColumn":21},{"ruleId":"react/jsx-filename-extension","severity":2,"message":"JSX not allowed in files with extension '.js'","line":20,"column":7,"nodeType":"JSXElement","endLine":25,"endColumn":13},{"ruleId":"react/react-in-jsx-scope","severity":2,"message":"'React' must be in scope when using JSX","line":21,"column":9,"nodeType":"JSXOpeningElement","endLine":21,"endColumn":19},{"ruleId":"react/react-in-jsx-scope","severity":2,"message":"'React' must be in scope when using JSX","line":22,"column":9,"nodeType":"JSXOpeningElement","endLine":22,"endColumn":45},{"ruleId":"react/react-in-jsx-scope","severity":2,"message":"'React' must be in scope when using JSX","line":23,"column":11,"nodeType":"JSXOpeningElement","endLine":23,"endColumn":28}],"errorCount":6,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { h, Component } from 'preact';\nimport { Router } from 'preact-router';\n\nimport Header from './header';\n\n// Code-splitting is automated for routes\nimport Home from '../routes/home';\n\nexport default class App extends Component {\n  /** Gets fired when the route changes.\n   *\t@param {Object} event\t\t\"change\" event from [preact-router](http://git.io/preact-router)\n   *\t@param {string} event.url\tThe newly routed URL\n   */\n  handleRoute = e => {\n    this.currentUrl = e.url;\n  };\n\n  render() {\n    return (\n      <div id=\"app\">\n        <Header />\n        <Router onChange={this.handleRoute}>\n          <Home path=\"/\" />\n        </Router>\n      </div>\n    );\n  }\n}\n"},{"filePath":"/Users/Prashant/Documents/Projects/eslint-stats/ui/src/components/card/index.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'h' is defined but never used.","line":1,"column":10,"nodeType":"Identifier","endLine":1,"endColumn":11},{"ruleId":"import/no-unresolved","severity":2,"message":"Unable to resolve path to module './style'.","line":2,"column":19,"nodeType":"Literal","endLine":2,"endColumn":28},{"ruleId":"react/prop-types","severity":2,"message":"'data' is missing in props validation","line":4,"column":17,"nodeType":"Property","endLine":4,"endColumn":21},{"ruleId":"react/prop-types","severity":2,"message":"'severity' is missing in props validation","line":4,"column":23,"nodeType":"Property","endLine":4,"endColumn":31},{"ruleId":"react/prop-types","severity":2,"message":"'ruleId' is missing in props validation","line":4,"column":33,"nodeType":"Property","endLine":4,"endColumn":46},{"ruleId":"react/jsx-filename-extension","severity":2,"message":"JSX not allowed in files with extension '.js'","line":5,"column":3,"nodeType":"JSXElement","endLine":18,"endColumn":9},{"ruleId":"react/react-in-jsx-scope","severity":2,"message":"'React' must be in scope when using JSX","line":5,"column":3,"nodeType":"JSXOpeningElement","endLine":5,"endColumn":38},{"ruleId":"eqeqeq","severity":2,"message":"Expected '===' and instead saw '=='.","line":9,"column":20,"nodeType":"BinaryExpression","messageId":"unexpected"},{"ruleId":"eqeqeq","severity":2,"message":"Expected '===' and instead saw '=='.","line":10,"column":18,"nodeType":"BinaryExpression","messageId":"unexpected"},{"ruleId":"react/react-in-jsx-scope","severity":2,"message":"'React' must be in scope when using JSX","line":11,"column":13,"nodeType":"JSXOpeningElement","endLine":11,"endColumn":41},{"ruleId":"react/react-in-jsx-scope","severity":2,"message":"'React' must be in scope when using JSX","line":12,"column":15,"nodeType":"JSXOpeningElement","endLine":12,"endColumn":44},{"ruleId":"react/react-in-jsx-scope","severity":2,"message":"'React' must be in scope when using JSX","line":13,"column":15,"nodeType":"JSXOpeningElement","endLine":13,"endColumn":49},{"ruleId":"react/react-in-jsx-scope","severity":2,"message":"'React' must be in scope when using JSX","line":14,"column":15,"nodeType":"JSXOpeningElement","endLine":14,"endColumn":51}],"errorCount":13,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { h } from 'preact';\nimport style from './style';\n\nconst Card = ({ data, severity, ruleId = null }) => (\n  <div style={{ marginTop: '20px' }}>\n    {data &&\n      data.messages.map(\n        each =>\n          severity == each.severity &&\n          ruleId == each.ruleId && (\n            <div className={style.card}>\n              <div className={style.title}>{each.message}</div>\n              <div className={style['rule-id']}>{each.ruleId}</div>\n              <div className={style['file-path']}>{data.filePath}</div>\n            </div>\n          )\n      )}\n  </div>\n);\n\nexport default Card;\n"},{"filePath":"/Users/Prashant/Documents/Projects/eslint-stats/ui/src/components/header/index.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'h' is defined but never used.","line":1,"column":10,"nodeType":"Identifier","endLine":1,"endColumn":11},{"ruleId":"no-unused-vars","severity":2,"message":"'Link' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","endLine":2,"endColumn":14},{"ruleId":"import/no-unresolved","severity":2,"message":"Unable to resolve path to module './style'.","line":3,"column":19,"nodeType":"Literal","endLine":3,"endColumn":28},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹` with `··`","line":6,"column":1,"nodeType":null,"endLine":6,"endColumn":2,"fix":{"range":[125,126],"text":"  "}},{"ruleId":"react/react-in-jsx-scope","severity":2,"message":"'React' must be in scope when using JSX","line":6,"column":2,"nodeType":"JSXOpeningElement","endLine":6,"endColumn":31},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 2 space characters but found 0.","line":6,"column":2,"nodeType":"JSXOpeningElement","endLine":6,"endColumn":31,"fix":{"range":[125,126],"text":"  "}},{"ruleId":"react/jsx-filename-extension","severity":2,"message":"JSX not allowed in files with extension '.js'","line":6,"column":2,"nodeType":"JSXElement","endLine":8,"endColumn":11},{"ruleId":"react/no-unknown-property","severity":2,"message":"Unknown property 'class' found, use 'className' instead","line":6,"column":10,"nodeType":"JSXAttribute","endLine":6,"endColumn":30,"fix":{"range":[134,139],"text":"className"}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹↹` with `····`","line":7,"column":1,"nodeType":null,"endLine":7,"endColumn":3,"fix":{"range":[156,158],"text":"    "}},{"ruleId":"react/react-in-jsx-scope","severity":2,"message":"'React' must be in scope when using JSX","line":7,"column":3,"nodeType":"JSXOpeningElement","endLine":7,"endColumn":7},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 2 space characters but found 0.","line":7,"column":3,"nodeType":"JSXOpeningElement","endLine":7,"endColumn":7,"fix":{"range":[156,158],"text":"  "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹` with `··`","line":8,"column":1,"nodeType":null,"endLine":8,"endColumn":2,"fix":{"range":[174,175],"text":"  "}}],"errorCount":12,"warningCount":0,"fixableErrorCount":6,"fixableWarningCount":0,"source":"import { h } from 'preact';\nimport { Link } from 'preact-router/match';\nimport style from './style';\n\nconst Header = () => (\n\t<header class={style.header}>\n\t\t<h1>ESLint</h1>\n\t</header>\n);\n\nexport default Header;\n"},{"filePath":"/Users/Prashant/Documents/Projects/eslint-stats/ui/src/index.js","messages":[{"ruleId":"import/no-unresolved","severity":2,"message":"Unable to resolve path to module './style'.","line":1,"column":8,"nodeType":"Literal","endLine":1,"endColumn":17}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import './style';\nimport App from './components/app';\n\nexport default App;\n"},{"filePath":"/Users/Prashant/Documents/Projects/eslint-stats/ui/src/routes/home/index.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'h' is defined but never used.","line":1,"column":10,"nodeType":"Identifier","endLine":1,"endColumn":11},{"ruleId":"no-unused-vars","severity":2,"message":"'Card' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","endLine":3,"endColumn":12},{"ruleId":"import/no-unresolved","severity":2,"message":"Unable to resolve path to module './style'.","line":4,"column":19,"nodeType":"Literal","endLine":4,"endColumn":28},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹` with `··`","line":10,"column":3,"nodeType":null,"endLine":10,"endColumn":4,"fix":{"range":[215,216],"text":"  "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹` with `··`","line":11,"column":3,"nodeType":null,"endLine":11,"endColumn":4,"fix":{"range":[231,232],"text":"  "}},{"ruleId":"react/no-unused-state","severity":2,"message":"Unused state field: 'ruleId'","line":11,"column":4,"nodeType":"Property","endLine":11,"endColumn":14},{"ruleId":"lines-between-class-members","severity":2,"message":"Expected blank line between class members.","line":13,"column":3,"nodeType":"ClassProperty","messageId":"always","endLine":26,"endColumn":5,"fix":{"range":[247,247],"text":"\n"}},{"ruleId":"no-shadow","severity":2,"message":"'data' is already declared in the upper scope.","line":13,"column":13,"nodeType":"Identifier","endLine":13,"endColumn":17},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹` with `··`","line":14,"column":3,"nodeType":null,"endLine":14,"endColumn":4,"fix":{"range":[272,273],"text":"  "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹` with `··`","line":15,"column":3,"nodeType":null,"endLine":15,"endColumn":4,"fix":{"range":[291,292],"text":"  "}},{"ruleId":"array-callback-return","severity":2,"message":"Expected to return a value in arrow function.","line":15,"column":18,"nodeType":"ArrowFunctionExpression","messageId":"expectedInside"},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹↹` with `····`","line":16,"column":3,"nodeType":null,"endLine":16,"endColumn":5,"fix":{"range":[313,315],"text":"    "}},{"ruleId":"array-callback-return","severity":2,"message":"Expected to return a value in arrow function.","line":16,"column":31,"nodeType":"ArrowFunctionExpression","messageId":"expectedInside"},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹↹↹` with `······`","line":17,"column":3,"nodeType":null,"endLine":17,"endColumn":6,"fix":{"range":[348,351],"text":"      "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `··↹↹↹↹` with `··········`","line":18,"column":1,"nodeType":null,"endLine":18,"endColumn":7,"fix":{"range":[384,390],"text":"          "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹↹↹}⏎` with `······}`","line":19,"column":3,"nodeType":null,"endLine":20,"endColumn":1,"fix":{"range":[451,456],"text":"      }"}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹↹↹↹` with `········`","line":21,"column":3,"nodeType":null,"endLine":21,"endColumn":7,"fix":{"range":[466,470],"text":"        "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹↹↹` with `······`","line":22,"column":3,"nodeType":null,"endLine":22,"endColumn":6,"fix":{"range":[503,506],"text":"      "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹↹` with `····`","line":23,"column":3,"nodeType":null,"endLine":23,"endColumn":5,"fix":{"range":[510,512],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹` with `··`","line":24,"column":3,"nodeType":null,"endLine":24,"endColumn":4,"fix":{"range":[518,519],"text":"  "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹` with `··`","line":25,"column":3,"nodeType":null,"endLine":25,"endColumn":4,"fix":{"range":[525,526],"text":"  "}},{"ruleId":"lines-between-class-members","severity":2,"message":"Expected blank line between class members.","line":27,"column":3,"nodeType":"ClassProperty","messageId":"always","endLine":29,"endColumn":5,"fix":{"range":[548,548],"text":"\n"}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `··↹` with `····`","line":28,"column":1,"nodeType":null,"endLine":28,"endColumn":4,"fix":{"range":[593,596],"text":"    "}},{"ruleId":"react/no-unused-state","severity":2,"message":"Unused state field: 'ruleId'","line":28,"column":30,"nodeType":"Property","endLine":28,"endColumn":36},{"ruleId":"lines-between-class-members","severity":2,"message":"Expected blank line between class members.","line":30,"column":3,"nodeType":"ClassProperty","messageId":"always","endLine":41,"endColumn":5,"fix":{"range":[637,637],"text":"\n"}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹` with `··`","line":31,"column":3,"nodeType":null,"endLine":31,"endColumn":4,"fix":{"range":[663,664],"text":"  "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹` with `··`","line":32,"column":3,"nodeType":null,"endLine":32,"endColumn":4,"fix":{"range":[702,703],"text":"  "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹↹` with `····`","line":33,"column":3,"nodeType":null,"endLine":33,"endColumn":5,"fix":{"range":[746,748],"text":"    "}},{"ruleId":"react/jsx-filename-extension","severity":2,"message":"JSX not allowed in files with extension '.js'","line":33,"column":5,"nodeType":"JSXElement","endLine":39,"endColumn":11},{"ruleId":"react/react-in-jsx-scope","severity":2,"message":"'React' must be in scope when using JSX","line":33,"column":5,"nodeType":"JSXOpeningElement","endLine":36,"endColumn":6},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Static HTML elements with event handlers require a role.","line":33,"column":5,"nodeType":"JSXOpeningElement","endLine":36,"endColumn":6},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":33,"column":5,"nodeType":"JSXOpeningElement","endLine":36,"endColumn":6},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 4 space characters but found 2.","line":33,"column":5,"nodeType":"JSXOpeningElement","endLine":36,"endColumn":6,"fix":{"range":[744,748],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹↹↹` with `······`","line":34,"column":3,"nodeType":null,"endLine":34,"endColumn":6,"fix":{"range":[755,758],"text":"      "}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 4 space characters but found 2.","line":34,"column":6,"nodeType":"JSXAttribute","endLine":34,"endColumn":23,"fix":{"range":[753,758],"text":"    "}},{"ruleId":"react/no-unknown-property","severity":2,"message":"Unknown property 'class' found, use 'className' instead","line":34,"column":6,"nodeType":"JSXAttribute","endLine":34,"endColumn":23,"fix":{"range":[758,763],"text":"className"}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹↹↹` with `······`","line":35,"column":3,"nodeType":null,"endLine":35,"endColumn":6,"fix":{"range":[778,781],"text":"      "}},{"ruleId":"react/jsx-indent-props","severity":2,"message":"Expected indentation of 4 space characters but found 2.","line":35,"column":6,"nodeType":"JSXAttribute","endLine":35,"endColumn":59,"fix":{"range":[776,781],"text":"    "}},{"ruleId":"react/destructuring-assignment","severity":2,"message":"Must use destructuring state assignment","line":35,"column":33,"nodeType":"MemberExpression","endLine":35,"endColumn":52},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹↹` with `····`","line":36,"column":3,"nodeType":null,"endLine":36,"endColumn":5,"fix":{"range":[837,839],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹↹↹` with `······`","line":37,"column":3,"nodeType":null,"endLine":37,"endColumn":6,"fix":{"range":[843,846],"text":"      "}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 4 space characters but found 2.","line":37,"column":6,"nodeType":"JSXExpressionContainer","endLine":37,"endColumn":11,"fix":{"range":[841,846],"text":"    "}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 4 space characters but found 8.","line":38,"column":15,"nodeType":"JSXOpeningElement","endLine":38,"endColumn":23,"fix":{"range":[852,866],"text":"    "}},{"ruleId":"react/react-in-jsx-scope","severity":2,"message":"'React' must be in scope when using JSX","line":38,"column":15,"nodeType":"JSXOpeningElement","endLine":38,"endColumn":23},{"ruleId":"react/jsx-one-expression-per-line","severity":2,"message":"`strong` must be placed on a new line","line":38,"column":15,"nodeType":"JSXElement","endLine":38,"endColumn":46,"fix":{"range":[866,897],"text":"\n<strong>{allTags[key]}</strong>"}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹↹` with `····`","line":39,"column":3,"nodeType":null,"endLine":39,"endColumn":5,"fix":{"range":[900,902],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹` with `··`","line":40,"column":3,"nodeType":null,"endLine":40,"endColumn":4,"fix":{"range":[911,912],"text":"  "}},{"ruleId":"lines-between-class-members","severity":2,"message":"Expected blank line between class members.","line":42,"column":3,"nodeType":"MethodDefinition","messageId":"always","endLine":60,"endColumn":4,"fix":{"range":[920,920],"text":"\n"}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹` with `··`","line":43,"column":3,"nodeType":null,"endLine":43,"endColumn":4,"fix":{"range":[936,937],"text":"  "}},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":43,"column":4,"nodeType":"MemberExpression","messageId":"unexpected","endLine":43,"endColumn":15},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹` with `··`","line":44,"column":3,"nodeType":null,"endLine":44,"endColumn":4,"fix":{"range":[958,959],"text":"  "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹↹` with `····`","line":45,"column":3,"nodeType":null,"endLine":45,"endColumn":5,"fix":{"range":[970,972],"text":"    "}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 4 space characters but found 2.","line":45,"column":5,"nodeType":"JSXOpeningElement","endLine":45,"endColumn":29,"fix":{"range":[968,972],"text":"    "}},{"ruleId":"react/react-in-jsx-scope","severity":2,"message":"'React' must be in scope when using JSX","line":45,"column":5,"nodeType":"JSXOpeningElement","endLine":45,"endColumn":29},{"ruleId":"react/no-unknown-property","severity":2,"message":"Unknown property 'class' found, use 'className' instead","line":45,"column":10,"nodeType":"JSXAttribute","endLine":45,"endColumn":28,"fix":{"range":[977,982],"text":"className"}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `··↹↹↹` with `········`","line":46,"column":1,"nodeType":null,"endLine":46,"endColumn":6,"fix":{"range":[997,1002],"text":"        "}},{"ruleId":"react/react-in-jsx-scope","severity":2,"message":"'React' must be in scope when using JSX","line":46,"column":6,"nodeType":"JSXOpeningElement","endLine":46,"endColumn":41},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 4 space characters but found 2.","line":46,"column":6,"nodeType":"JSXOpeningElement","endLine":46,"endColumn":41,"fix":{"range":[997,1002],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹↹↹↹` with `········`","line":47,"column":3,"nodeType":null,"endLine":47,"endColumn":7,"fix":{"range":[1040,1044],"text":"        "}},{"ruleId":"react/button-has-type","severity":2,"message":"Missing an explicit type attribute for button","line":47,"column":7,"nodeType":"JSXElement","endLine":47,"endColumn":61},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 4 space characters but found 2.","line":47,"column":7,"nodeType":"JSXOpeningElement","endLine":47,"endColumn":46,"fix":{"range":[1038,1044],"text":"    "}},{"ruleId":"react/react-in-jsx-scope","severity":2,"message":"'React' must be in scope when using JSX","line":47,"column":7,"nodeType":"JSXOpeningElement","endLine":47,"endColumn":46},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹↹↹↹` with `········`","line":48,"column":3,"nodeType":null,"endLine":48,"endColumn":7,"fix":{"range":[1101,1105],"text":"        "}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 4 space characters but found 2.","line":48,"column":7,"nodeType":"JSXOpeningElement","endLine":48,"endColumn":46,"fix":{"range":[1099,1105],"text":"    "}},{"ruleId":"react/button-has-type","severity":2,"message":"Missing an explicit type attribute for button","line":48,"column":7,"nodeType":"JSXElement","endLine":48,"endColumn":63},{"ruleId":"react/react-in-jsx-scope","severity":2,"message":"'React' must be in scope when using JSX","line":48,"column":7,"nodeType":"JSXOpeningElement","endLine":48,"endColumn":46},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹↹↹` with `······`","line":49,"column":3,"nodeType":null,"endLine":49,"endColumn":6,"fix":{"range":[1164,1167],"text":"      "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹↹↹` with `······`","line":50,"column":3,"nodeType":null,"endLine":50,"endColumn":6,"fix":{"range":[1176,1179],"text":"      "}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 4 space characters but found 2.","line":50,"column":6,"nodeType":"JSXOpeningElement","endLine":50,"endColumn":41,"fix":{"range":[1174,1179],"text":"    "}},{"ruleId":"react/react-in-jsx-scope","severity":2,"message":"'React' must be in scope when using JSX","line":50,"column":6,"nodeType":"JSXOpeningElement","endLine":50,"endColumn":41},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹↹↹` with `······`","line":51,"column":3,"nodeType":null,"endLine":51,"endColumn":6,"fix":{"range":[1246,1249],"text":"      "}},{"ruleId":"react/jsx-indent","severity":2,"message":"Expected indentation of 4 space characters but found 2.","line":51,"column":6,"nodeType":"JSXExpressionContainer","endLine":57,"endColumn":13,"fix":{"range":[1244,1249],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹↹` with `····`","line":58,"column":3,"nodeType":null,"endLine":58,"endColumn":5,"fix":{"range":[1400,1402],"text":"    "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹` with `··`","line":59,"column":3,"nodeType":null,"endLine":59,"endColumn":4,"fix":{"range":[1411,1412],"text":"  "}}],"errorCount":73,"warningCount":1,"fixableErrorCount":52,"fixableWarningCount":0,"source":"import { h, Component } from 'preact';\nimport data from '../../../../content.json';\nimport Card from '../../components/card';\nimport style from './style';\n\nclass Home extends Component {\n  tags = {};\n\n  state = {\n  \tseverity: 2,\n  \truleId: ''\n  };\n  getTags = data => {\n  \tthis.tags = {};\n  \tdata.map(each => {\n  \t\teach.messages.map(eachErr => {\n  \t\t\tif (this.tags[eachErr.ruleId]) {\n  \t\t\t\tthis.tags[eachErr.ruleId] = this.tags[eachErr.ruleId] + 1;\n  \t\t\t}\n else {\n  \t\t\t\tthis.tags[eachErr.ruleId] = 1;\n  \t\t\t}\n  \t\t});\n  \t});\n  \treturn this.tags;\n  };\n  filter = (severity = 2, ruleId = '') => {\n  \tthis.setState({ severity, ruleId });\n  };\n  renderTags = () => {\n  \tconst allTags = this.getTags(data);\n  \treturn Object.keys(allTags).map(key => (\n  \t\t<div\n  \t\t\tclass={style.tag}\n  \t\t\tonClick={() => this.filter(this.state.severity, key)}\n  \t\t>\n  \t\t\t{key}\n        &nbsp;<strong>{allTags[key]}</strong>\n  \t\t</div>\n  \t));\n  };\n  render() {\n  \tconsole.log(data);\n  \treturn (\n  \t\t<div class={style.home}>\n  \t\t\t<div style={{ marginTop: '20px' }}>\n  \t\t\t\t<button onClick={() => this.filter(2)}>Errors</button>\n  \t\t\t\t<button onClick={() => this.filter(1)}>Warnings</button>\n  \t\t\t</div>\n  \t\t\t<div style={{ marginTop: '20px' }}>{this.renderTags(data)}</div>\n  \t\t\t{/* {data.map(each => (\n  \t\t\t\t<Card\n  \t\t\t\t\tdata={each}\n  \t\t\t\t\tseverity={this.state.severity}\n  \t\t\t\t\truleId={this.state.ruleId}\n  \t\t\t\t/>\n  \t\t\t))} */}\n  \t\t</div>\n  \t);\n  }\n}\nexport default Home;\n"},{"filePath":"/Users/Prashant/Documents/Projects/eslint-stats/ui/tests/__mocks__/browserMocks.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"/Users/Prashant/Documents/Projects/eslint-stats/ui/tests/__mocks__/fileMocks.js","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `⏎`","line":3,"column":35,"nodeType":null,"endLine":3,"endColumn":35,"fix":{"range":[197,197],"text":"\n"}}],"errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"// This fixed an error related to the CSS and loading gif breaking my Jest test\n// See https://facebook.github.io/jest/docs/en/webpack.html#handling-static-assets\nmodule.exports = 'test-file-stub';"},{"filePath":"/Users/Prashant/Documents/Projects/eslint-stats/ui/tests/header.test.js","messages":[{"ruleId":"import/order","severity":2,"message":"`../src/components/header` import should occur after import of `preact-render-spy`","line":1,"column":1,"nodeType":"ImportDeclaration","endLine":1,"endColumn":47,"fix":{"range":[0,191],"text":"import { Link } from 'preact-router/match';\n// See: https://github.com/mzgoddard/preact-render-spy\nimport { shallow } from 'preact-render-spy';\nimport Header from '../src/components/header';\n"}},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":9},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹` with `··`","line":7,"column":1,"nodeType":null,"endLine":7,"endColumn":2,"fix":{"range":[239,240],"text":"  "}},{"ruleId":"no-undef","severity":2,"message":"'test' is not defined.","line":7,"column":2,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":6},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹↹` with `····`","line":8,"column":1,"nodeType":null,"endLine":8,"endColumn":3,"fix":{"range":[283,285],"text":"    "}},{"ruleId":"react/react-in-jsx-scope","severity":2,"message":"'React' must be in scope when using JSX","line":8,"column":27,"nodeType":"JSXOpeningElement","endLine":8,"endColumn":37},{"ruleId":"react/jsx-filename-extension","severity":2,"message":"JSX not allowed in files with extension '.js'","line":8,"column":27,"nodeType":"JSXElement","endLine":8,"endColumn":37},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹↹` with `····`","line":9,"column":1,"nodeType":null,"endLine":9,"endColumn":3,"fix":{"range":[322,324],"text":"    "}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":9,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":9,"endColumn":9},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹↹` with `····`","line":10,"column":1,"nodeType":null,"endLine":10,"endColumn":3,"fix":{"range":[378,380],"text":"    "}},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":10,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":9},{"ruleId":"react/react-in-jsx-scope","severity":2,"message":"'React' must be in scope when using JSX","line":10,"column":23,"nodeType":"JSXOpeningElement","endLine":10,"endColumn":31},{"ruleId":"jsx-a11y/anchor-is-valid","severity":2,"message":"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","line":10,"column":23,"nodeType":"JSXOpeningElement","endLine":10,"endColumn":31},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `↹` with `··`","line":11,"column":1,"nodeType":null,"endLine":11,"endColumn":2,"fix":{"range":[427,428],"text":"  "}}],"errorCount":14,"warningCount":0,"fixableErrorCount":6,"fixableWarningCount":0,"source":"import Header from '../src/components/header';\nimport { Link } from 'preact-router/match';\n// See: https://github.com/mzgoddard/preact-render-spy\nimport { shallow } from 'preact-render-spy';\n\ndescribe('Initial Test of the Header', () => {\n\ttest('Header renders 3 nav items', () => {\n\t\tconst context = shallow(<Header />);\n\t\texpect(context.find('h1').text()).toBe('Preact App');\n\t\texpect(context.find(<Link />).length).toBe(3);\n\t});\n});\n"}]
